name: HANDLE_PR

on:
  pull_request:
    types: [opened, synchronize]
    branches: [ dev, test, master ]

jobs:
  file_changes:
    name: Check if the PR made changes to client or server (or both!)
    runs-on: ubuntu-latest
    outputs:
      client: ${{ steps.filter.outputs.client }}
      server: ${{ steps.filter.outputs.server }}
    steps:
    - uses: dorny/paths-filter@v2.2.1
      id: filter
      with:
        # Filters stored in own yaml file or inline yml
        #: todo: change to yml file name once it works
        filters: |
           server:
            - 'server/**/*'
           client:
            - 'client/**/*'
          
  auto-label:
    name: Label updated pr with relevant services
    runs-on: ubuntu-latest
    steps:
      - uses: actions/labeler@master
        with:
            repo-token: "${{ secrets.GITHUB_TOKEN }}"

  test-client:
    needs: [file_changes]
    name: Run tests on client 
    if: ${{ needs.file_changes.outputs.client == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        name: Setup node
        with:
         node-version: '12'
      - name: Installing Dependencies
        run:  npm install
        working-directory: client
      - name: Running tests
        run: npm test
        working-directory: client
  test-server:
    needs: [file_changes]
    name: Run tests on Server 
    if: ${{ needs.file_changes.outputs.server == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        name: Setup node
        with:
           node-version: '12'
      - name: Installing Dependencies
        run:  npm install
        working-directory: server
      - name: Running tests
        run: npm test
        working-directory: server

  comment-tfs-link:
    name: sample comment
    runs-on: ubuntu-latest
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set output
        id: vars
        run: echo ::set-output name=short_ref::${{github.event.pull_request.head.ref}} #refs/*/}
# 
      - name: comment PR
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: "Hi! , is this working?, echo ${{ steps.vars.outputs.short_ref }}"
          check_for_duplicate_msg: false

  pr-labeler:
    name: comment-on-pr example
    runs-on: ubuntu-latest
    steps:
      - uses: TimonVS/pr-labeler-action@v3
        with:
          configuration-path: .github/pr-labeler.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
